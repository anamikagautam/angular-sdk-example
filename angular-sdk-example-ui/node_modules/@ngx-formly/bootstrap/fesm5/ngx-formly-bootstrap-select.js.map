{"version":3,"file":"ngx-formly-bootstrap-select.js","sources":["ng://@ngx-formly/bootstrap/select/select.type.ts","ng://@ngx-formly/bootstrap/select/select.module.ts","ng://@ngx-formly/bootstrap/select/ngx-formly-bootstrap-select.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy, ViewChild, NgZone } from '@angular/core';\nimport { SelectControlValueAccessor } from '@angular/forms';\nimport { FieldType } from '@ngx-formly/core';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-field-select',\n  template: `\n    <select\n      *ngIf=\"to.multiple; else singleSelect\"\n      class=\"form-control\"\n      multiple\n      [class.custom-select]=\"to.customSelect\"\n      [formControl]=\"formControl\"\n      [compareWith]=\"to.compareWith\"\n      [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\"\n    >\n      <ng-container *ngIf=\"to.options | formlySelectOptions: field | async as opts\">\n        <ng-container *ngIf=\"to._flatOptions; else grouplist\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n          </ng-container>\n        </ng-container>\n\n        <ng-template #grouplist>\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{\n              opt.label\n            }}</option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-template>\n      </ng-container>\n    </select>\n\n    <ng-template #singleSelect>\n      <select\n        class=\"form-control\"\n        [formControl]=\"formControl\"\n        [compareWith]=\"to.compareWith\"\n        [class.custom-select]=\"to.customSelect\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\"\n      >\n        <option *ngIf=\"to.placeholder\" [ngValue]=\"undefined\">{{ to.placeholder }}</option>\n        <ng-container *ngIf=\"to.options | formlySelectOptions: field | async as opts\">\n          <ng-container *ngIf=\"to._flatOptions; else grouplist\">\n            <ng-container *ngFor=\"let opt of opts\">\n              <option [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{ opt.label }}</option>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #grouplist>\n            <ng-container *ngFor=\"let opt of opts\">\n              <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">{{\n                opt.label\n              }}</option>\n              <ng-template #optgroup>\n                <optgroup [label]=\"opt.label\">\n                  <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                    {{ child.label }}\n                  </option>\n                </optgroup>\n              </ng-template>\n            </ng-container>\n          </ng-template>\n        </ng-container>\n      </select>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldSelect extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      compareWith(o1: any, o2: any) {\n        return o1 === o2;\n      },\n    },\n  };\n\n  // workaround for https://github.com/angular/angular/issues/10010\n  @ViewChild(SelectControlValueAccessor) set selectAccessor(s: any) {\n    if (!s) {\n      return;\n    }\n\n    const writeValue = s.writeValue.bind(s);\n    if (s._getOptionId(s.value) === null) {\n      writeValue(s.value);\n    }\n\n    s.writeValue = (value: any) => {\n      const id = s._idCounter;\n      writeValue(value);\n      if (value === null) {\n        this.ngZone.onStable\n          .asObservable()\n          .pipe(take(1))\n          .subscribe(() => {\n            if (\n              id !== s._idCounter &&\n              s._getOptionId(value) === null &&\n              s._elementRef.nativeElement.selectedIndex !== -1\n            ) {\n              writeValue(value);\n            }\n          });\n      }\n    };\n  }\n\n  constructor(private ngZone: NgZone) {\n    super();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\nimport { FormlyFieldSelect } from './select.type';\n\n@NgModule({\n  declarations: [FormlyFieldSelect],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    FormlyBootstrapFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'select',\n          component: FormlyFieldSelect,\n          wrappers: ['form-field'],\n        },\n        { name: 'enum', extends: 'select' },\n      ],\n    }),\n  ],\n})\nexport class FormlyBootstrapSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;IA+EuC,qCAAS;IAyC9C,2BAAoB,MAAc;QAAlC,YACE,iBAAO,SACR;QAFmB,YAAM,GAAN,MAAM,CAAQ;QAxClC,oBAAc,GAAG;YACf,eAAe,EAAE;gBACf,OAAO,EAAE,EAAE;gBACX,WAAW,EAAX,UAAY,EAAO,EAAE,EAAO;oBAC1B,OAAO,EAAE,KAAK,EAAE,CAAC;iBAClB;aACF;SACF,CAAC;;KAmCD;IAhCsC,sBAAI,6CAAc;;aAAlB,UAAmB,CAAM;YAAhE,iBA4BC;YA3BC,IAAI,CAAC,CAAC,EAAE;gBACN,OAAO;aACR;YAED,IAAM,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;gBACpC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,CAAC,CAAC,UAAU,GAAG,UAAC,KAAU;gBACxB,IAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;gBACxB,UAAU,CAAC,KAAK,CAAC,CAAC;gBAClB,IAAI,KAAK,KAAK,IAAI,EAAE;oBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ;yBACjB,YAAY,EAAE;yBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACb,SAAS,CAAC;wBACT,IACE,EAAE,KAAK,CAAC,CAAC,UAAU;4BACnB,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,IAAI;4BAC9B,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,KAAK,CAAC,CAAC,EAChD;4BACA,UAAU,CAAC,KAAK,CAAC,CAAC;yBACnB;qBACF,CAAC,CAAC;iBACN;aACF,CAAC;SACH;;;OAAA;;gBAE2B,MAAM;;IA9BK;QAAtC,SAAS,CAAC,0BAA0B,CAAC;;;2DA4BrC;IAvCU,iBAAiB;QA1E7B,SAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,mwFAqET;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;yCA0C4B,MAAM;OAzCvB,iBAAiB,CA4C7B;IAAD,wBAAC;CAAA,CA5CsC,SAAS;;;IClDhD;KAA2C;IAA9B,2BAA2B;QApBvC,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;YACjC,OAAO,EAAE;gBACP,YAAY;gBACZ,mBAAmB;gBAEnB,8BAA8B;gBAC9B,kBAAkB;gBAClB,YAAY,CAAC,QAAQ,CAAC;oBACpB,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,iBAAiB;4BAC5B,QAAQ,EAAE,CAAC,YAAY,CAAC;yBACzB;wBACD,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;qBACpC;iBACF,CAAC;aACH;SACF,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAA3C;;AC7BA;;;;;;"}