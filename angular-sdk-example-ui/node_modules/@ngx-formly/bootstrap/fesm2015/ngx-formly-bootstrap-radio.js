import { __decorate } from 'tslib';
import { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FieldType, FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlySelectModule } from '@ngx-formly/core/select';
import { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';

let FormlyFieldRadio = class FormlyFieldRadio extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                options: [],
                formCheck: 'custom',
            },
        };
    }
};
FormlyFieldRadio = __decorate([
    Component({
        selector: 'formly-field-radio',
        template: `
    <div>
      <div
        *ngFor="let option of to.options | formlySelectOptions: field | async; let i = index"
        [ngClass]="{
          'form-check': to.formCheck.indexOf('custom') === -1,
          'form-check-inline': to.formCheck === 'inline',
          'custom-control custom-radio': to.formCheck.indexOf('custom') === 0,
          'custom-control-inline': to.formCheck === 'custom-inline'
        }"
      >
        <input
          type="radio"
          [id]="id + '_' + i"
          [class.form-check-input]="to.formCheck.indexOf('custom') === -1"
          [class.custom-control-input]="to.formCheck.indexOf('custom') === 0"
          [name]="field.name || id"
          [class.is-invalid]="showError"
          [attr.value]="option.value"
          [value]="option.value"
          [formControl]="formControl"
          [formlyAttributes]="field"
        />
        <label
          [class.form-check-label]="to.formCheck.indexOf('custom') === -1"
          [class.custom-control-label]="to.formCheck.indexOf('custom') === 0"
          [for]="id + '_' + i"
        >
          {{ option.label }}
        </label>
      </div>
    </div>
  `,
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], FormlyFieldRadio);

let FormlyBootstrapRadioModule = class FormlyBootstrapRadioModule {
};
FormlyBootstrapRadioModule = __decorate([
    NgModule({
        declarations: [FormlyFieldRadio],
        imports: [
            CommonModule,
            ReactiveFormsModule,
            FormlyBootstrapFormFieldModule,
            FormlySelectModule,
            FormlyModule.forChild({
                types: [
                    {
                        name: 'radio',
                        component: FormlyFieldRadio,
                        wrappers: ['form-field'],
                    },
                ],
            }),
        ],
    })
], FormlyBootstrapRadioModule);

/**
 * Generated bundle index. Do not edit.
 */

export { FormlyBootstrapRadioModule, FormlyFieldRadio };
//# sourceMappingURL=ngx-formly-bootstrap-radio.js.map
