import { __extends, __decorate } from 'tslib';
import { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FieldType, FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';

var FormlyFieldInput = /** @class */ (function (_super) {
    __extends(FormlyFieldInput, _super);
    function FormlyFieldInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FormlyFieldInput.prototype, "type", {
        get: function () {
            return this.to.type || 'text';
        },
        enumerable: true,
        configurable: true
    });
    FormlyFieldInput = __decorate([
        Component({
            selector: 'formly-field-input',
            template: "\n    <input\n      *ngIf=\"type !== 'number'; else numberTmp\"\n      [type]=\"type\"\n      [formControl]=\"formControl\"\n      class=\"form-control\"\n      [formlyAttributes]=\"field\"\n      [class.is-invalid]=\"showError\"\n    />\n    <ng-template #numberTmp>\n      <input\n        type=\"number\"\n        [formControl]=\"formControl\"\n        class=\"form-control\"\n        [formlyAttributes]=\"field\"\n        [class.is-invalid]=\"showError\"\n      />\n    </ng-template>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], FormlyFieldInput);
    return FormlyFieldInput;
}(FieldType));

var FormlyBootstrapInputModule = /** @class */ (function () {
    function FormlyBootstrapInputModule() {
    }
    FormlyBootstrapInputModule = __decorate([
        NgModule({
            declarations: [FormlyFieldInput],
            imports: [
                CommonModule,
                ReactiveFormsModule,
                FormlyBootstrapFormFieldModule,
                FormlyModule.forChild({
                    types: [
                        {
                            name: 'input',
                            component: FormlyFieldInput,
                            wrappers: ['form-field'],
                        },
                        { name: 'string', extends: 'input' },
                        {
                            name: 'number',
                            extends: 'input',
                            defaultOptions: {
                                templateOptions: {
                                    type: 'number',
                                },
                            },
                        },
                        {
                            name: 'integer',
                            extends: 'input',
                            defaultOptions: {
                                templateOptions: {
                                    type: 'number',
                                },
                            },
                        },
                    ],
                }),
            ],
        })
    ], FormlyBootstrapInputModule);
    return FormlyBootstrapInputModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { FormlyBootstrapInputModule, FormlyFieldInput };
//# sourceMappingURL=ngx-formly-bootstrap-input.js.map
