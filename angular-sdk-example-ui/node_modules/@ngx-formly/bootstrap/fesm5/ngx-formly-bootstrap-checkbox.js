import { __extends, __decorate } from 'tslib';
import { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FieldType, FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';

var FormlyFieldCheckbox = /** @class */ (function (_super) {
    __extends(FormlyFieldCheckbox, _super);
    function FormlyFieldCheckbox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: {
                indeterminate: true,
                hideLabel: true,
                formCheck: 'custom',
            },
        };
        return _this;
    }
    FormlyFieldCheckbox = __decorate([
        Component({
            selector: 'formly-field-checkbox',
            template: "\n    <div\n      [ngClass]=\"{\n        'form-check': to.formCheck.indexOf('custom') === -1,\n        'form-check-inline': to.formCheck === 'inline',\n        'custom-control': to.formCheck.indexOf('custom') === 0,\n        'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',\n        'custom-control-inline': to.formCheck === 'custom-inline',\n        'custom-switch': to.formCheck === 'custom-switch'\n      }\"\n    >\n      <input\n        type=\"checkbox\"\n        [class.is-invalid]=\"showError\"\n        [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n        [class.position-static]=\"to.formCheck === 'nolabel'\"\n        [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n        [indeterminate]=\"to.indeterminate && formControl.value == null\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n      />\n      <label\n        *ngIf=\"to.formCheck !== 'nolabel'\"\n        [for]=\"id\"\n        [class.form-check-label]=\"to.formCheck.indexOf('custom') === -1\"\n        [class.custom-control-label]=\"to.formCheck.indexOf('custom') === 0\"\n      >\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </label>\n    </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], FormlyFieldCheckbox);
    return FormlyFieldCheckbox;
}(FieldType));

var FormlyBootstrapCheckboxModule = /** @class */ (function () {
    function FormlyBootstrapCheckboxModule() {
    }
    FormlyBootstrapCheckboxModule = __decorate([
        NgModule({
            declarations: [FormlyFieldCheckbox],
            imports: [
                CommonModule,
                ReactiveFormsModule,
                FormlyBootstrapFormFieldModule,
                FormlyModule.forChild({
                    types: [
                        {
                            name: 'checkbox',
                            component: FormlyFieldCheckbox,
                            wrappers: ['form-field'],
                        },
                        {
                            name: 'boolean',
                            extends: 'checkbox',
                        },
                    ],
                }),
            ],
        })
    ], FormlyBootstrapCheckboxModule);
    return FormlyBootstrapCheckboxModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { FormlyBootstrapCheckboxModule, FormlyFieldCheckbox };
//# sourceMappingURL=ngx-formly-bootstrap-checkbox.js.map
