{"version":3,"file":"ngx-formly-bootstrap-multicheckbox.js","sources":["ng://@ngx-formly/bootstrap/multicheckbox/multicheckbox.type.ts","ng://@ngx-formly/bootstrap/multicheckbox/multicheckbox.module.ts","ng://@ngx-formly/bootstrap/multicheckbox/ngx-formly-bootstrap-multicheckbox.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-multicheckbox',\n  template: `\n    <div>\n      <div\n        *ngFor=\"let option of to.options | formlySelectOptions: field | async; let i = index\"\n        [ngClass]=\"{\n          'form-check': to.formCheck.indexOf('custom') === -1,\n          'form-check-inline': to.formCheck === 'inline',\n          'custom-control': to.formCheck.indexOf('custom') === 0,\n          'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',\n          'custom-control-inline': to.formCheck === 'custom-inline',\n          'custom-switch': to.formCheck === 'custom-switch'\n        }\"\n      >\n        <input\n          type=\"checkbox\"\n          [id]=\"id + '_' + i\"\n          [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n          [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n          [value]=\"option.value\"\n          [checked]=\"isChecked(option)\"\n          [formlyAttributes]=\"field\"\n          (change)=\"onChange(option.value, $event.target.checked)\"\n        />\n        <label\n          [class.form-check-label]=\"to.formCheck.indexOf('custom') === -1\"\n          [class.custom-control-label]=\"to.formCheck.indexOf('custom') === 0\"\n          [for]=\"id + '_' + i\"\n        >\n          {{ option.label }}\n        </label>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      formCheck: 'custom', // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline'\n    },\n  };\n\n  onChange(value: any, checked: boolean) {\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(\n        checked\n          ? [...(this.formControl.value || []), value]\n          : [...(this.formControl.value || [])].filter((o) => o !== value),\n      );\n    } else {\n      this.formControl.patchValue({ ...this.formControl.value, [value]: checked });\n    }\n    this.formControl.markAsTouched();\n  }\n\n  isChecked(option: any) {\n    const value = this.formControl.value;\n\n    return value && (this.to.type === 'array' ? value.indexOf(option.value) !== -1 : value[option.value]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\n\nimport { FormlyFieldMultiCheckbox } from './multicheckbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldMultiCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    FormlyBootstrapFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyBootstrapMultiCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;IAwC8C,4CAAS;IAAvD;QAAA,qEA0BC;QAzBC,oBAAc,GAAG;YACf,eAAe,EAAE;gBACf,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,QAAQ;aACpB;SACF,CAAC;;KAoBH;IAlBC,2CAAQ,GAAR,UAAS,KAAU,EAAE,OAAgB;;QACnC,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CACzB,OAAO;4BACE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,IAAG,KAAK,KACzC,UAAK,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,KAAK,KAAK,GAAA,CAAC,CACnE,CAAC;SACH;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,UAAU,uBAAM,IAAI,CAAC,WAAW,CAAC,KAAK,gBAAG,KAAK,IAAG,OAAO,OAAG,CAAC;SAC9E;QACD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;KAClC;IAED,4CAAS,GAAT,UAAU,MAAW;QACnB,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAErC,OAAO,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACvG;IAzBU,wBAAwB;QArCpC,SAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,QAAQ,EAAE,qyCAgCT;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;OACW,wBAAwB,CA0BpC;IAAD,+BAAC;CAAA,CA1B6C,SAAS;;;ICZvD;KAAkD;IAArC,kCAAkC;QAnB9C,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;YACxC,OAAO,EAAE;gBACP,YAAY;gBACZ,mBAAmB;gBAEnB,8BAA8B;gBAC9B,kBAAkB;gBAClB,YAAY,CAAC,QAAQ,CAAC;oBACpB,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,eAAe;4BACrB,SAAS,EAAE,wBAAwB;4BACnC,QAAQ,EAAE,CAAC,YAAY,CAAC;yBACzB;qBACF;iBACF,CAAC;aACH;SACF,CAAC;OACW,kCAAkC,CAAG;IAAD,yCAAC;CAAlD;;AC5BA;;;;;;"}