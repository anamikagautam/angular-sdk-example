{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/ehr/ehr.component.ts","webpack:///src/app/ehr/ehr.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/formly-types/repeat-type.formly.component.ts","webpack:///src/app/formly-types/panel-wrapper.formly.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/openehr-sdk.service.ts","webpack:///src/app/form/form.component.ts","webpack:///src/app/form/form.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","EhrComponent","ehrService","currentEhrId","subscribe","ehrId","createEhr","response","changeEhrId","ehr_id","selector","templateUrl","styleUrls","AppComponent","title","RepeatTypeComponent","add","template","PanelWrapperComponent","AppModule","forRoot","extras","lazyRender","types","name","component","wrappers","declarations","imports","providers","bootstrap","OpenehrSdkService","http","baseUrl","ehrIdSource","asObservable","next","body","headers","set","post","observe","uid","get","providedIn","FormComponent","diagnosis","form","model","language","territory","healthCareFacility","startTimeValue","Date","settingDefiningcode","categoryDefiningcode","problemDiagnose","subject","letztesDokumentationsdatumValue","atiopathogenese","atiologieDerKrankheit","fields","key","type","hide","templateOptions","required","label","fieldGroup","placeholder","addText","fieldArray","options","value","hooks","onInit","field","formControl","valueChanges","pipe","uploadDiagnosis","console","log","getDiagnosis","uuid","onSubmit","routes","AppRoutingModule","exports","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { OpenehrSdkService } from '../openehr-sdk.service';\n\n@Component({\n  selector: 'app-ehr',\n  templateUrl: './ehr.component.html',\n  styleUrls: ['./ehr.component.scss']\n})\nexport class EhrComponent implements OnInit {\n\n  ehrId: string;\n\n  constructor(private ehrService: OpenehrSdkService) { }\n\n  ngOnInit(): void {\n\n  this.ehrService.currentEhrId.subscribe(\n    ehrId => this.ehrId = ehrId )\n  }\n\n  createEhr() {\n    this.ehrService.createEhr().subscribe(\n      response => {\n        this.ehrService.changeEhrId(response.ehr_id);\n      }\n    )\n  }\n\n}\n","<div class=\"m-3\">\n  <div class=\"card bg-light\">\n    <div class=\"card-body\">\n      <h3 class=\"card-title\">\n        EHR\n      </h3>\n      <div class=\"d-flex flex-row\" >\n        <button class=\"btn btn-primary\" type=\"button\" (click)=\"createEhr()\">Create new EHR</button>\n        <strong *ngIf=\"ehrId; else noEhr\" class=\"ml-3\">\n          EHR created ... <br/> EHR-ID: {{ehrId}}\n        </strong>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #noEhr>\n  <strong class=\"ml-3\">\n    An EHR must be created in order to save a composition.\n  </strong>\n<ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'openehr-sdk-example-app';\n}\n","<app-ehr></app-ehr>\n<app-form></app-form>\n","import { Component } from '@angular/core';\nimport { FieldArrayType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-repeat-section',\n  template: `\n    <div *ngFor=\"let field of field.fieldGroup; let i = index;\" class=\"card my-1\">\n      <div class=\"card-body d-flex flex-row justify-content-between align-items-center\">\n        <formly-field [field]=\"field\"></formly-field>\n        <button class=\"btn btn-info ml-2\" type=\"button\" (click)=\"remove(i)\">Entfernen</button>\n      </div>\n    </div>\n    <div class=\"mt-2\">\n      <button class=\"btn btn-info\" type=\"button\" (click)=\"add()\">{{ to.addText }}</button>\n    </div>\n  `,\n})\nexport class RepeatTypeComponent extends FieldArrayType {}\n","import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-panel',\n  template: `\n    <div class=\"card my-1\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ to.label }}</h5>\n        <div #fieldComponent></div>\n      </div>\n    </div>\n  `,\n})\nexport class PanelWrapperComponent extends FieldWrapper {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\nimport { RepeatTypeComponent } from './formly-types/repeat-type.formly.component'\nimport { PanelWrapperComponent } from './formly-types/panel-wrapper.formly.component';\n\nimport { FormComponent } from './form/form.component';\nimport { EhrComponent } from './ehr/ehr.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepeatTypeComponent,\n    PanelWrapperComponent,\n    FormComponent,\n    EhrComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormlyModule.forRoot(\n      {\n        extras: { lazyRender: true } ,\n         types: [\n          { name: 'repeat', component: RepeatTypeComponent },\n        ],\n         wrappers: [\n          { name: 'panel', component: PanelWrapperComponent },\n        ]\n    }),\n    FormlyBootstrapModule,\n    HttpClientModule,\n    NgbModule,\n    FontAwesomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenehrSdkService {\n\n  baseUrl = 'http://localhost:8888';\n\n  private ehrIdSource = new BehaviorSubject<string>('');\n  currentEhrId = this.ehrIdSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  changeEhrId(ehrId: string) {\n    this.ehrIdSource.next(ehrId);\n  }\n\n\n  uploadDiagnosis(ehr_id: string, body: {}): Observable<any> {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n\n    return this.http.post<any>('api/' + ehr_id + '/diagnosis', body, {headers: headers, observe: 'response'})\n  }\n\n\n  getDiagnosis(ehr_id: string, uid: string): Observable<any> {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json');\n\n    return this.http.get<any>('api/' + ehr_id + '/diagnosis/' + uid, {headers: headers, observe: 'response'})\n  }\n\n\n  createEhr(): Observable<any> {\n\n    return this.http.post<any>('api/ehr', { observe: 'response'})\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { OpenehrSdkService } from '../openehr-sdk.service';\nimport { startWith, tap, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  diagnosis: {} = null;\n  ehrId: string;\n\n  constructor(private ehrService: OpenehrSdkService) {\n\n  }\n\n  ngOnInit() {\n    this.ehrService.currentEhrId.subscribe(\n      ehrId => this.ehrId = ehrId )\n  }\n\n\n  form = new FormGroup({});\n\n  model = {\n    language: 'DE',\n    territory: 'DE',\n    healthCareFacility: {\n      name: 'MHH',\n    },\n    startTimeValue: new Date(),\n    settingDefiningcode: 'SECONDARY_MEDICAL_CARE',\n    categoryDefiningcode: 'EVENT',\n    problemDiagnose: {\n      subject: {\n        name: 'self'\n      },\n      letztesDokumentationsdatumValue: new Date(),\n      language: 'DE',\n      atiopathogenese: {\n        atiologieDerKrankheit: [{}],\n      },\n    },\n  };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'language',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        required: true,\n      }\n    },\n    {\n      key: 'territory',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        required: true,\n      }\n    },\n    {\n      key: 'healthCareFacility',\n      wrappers: ['panel'],\n      templateOptions: {\n        label: 'Einrichtung'\n      },\n      fieldGroup: [\n        {\n          key: 'name',\n          type: 'input',\n          templateOptions: {\n            label: 'Einrichtung',\n            placeholder: 'Bitte Einrichtung eingeben',\n          }\n        },\n        {\n          key: 'identifiers',\n          type: 'input',\n          hide: true,\n        }\n      ]\n    },\n    {\n      key: 'startTimeValue',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        required: true,\n        type: 'date',\n      },\n    },\n    {\n      key: 'berichtIdValue',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        label: 'Bericht ID',\n        placeholder: 'Bitte Bericht ID angeben',\n      },\n    },\n    {\n      key: 'fallidentifikation',\n      wrappers: ['panel'],\n      templateOptions: {\n        required: true,\n        label: 'Fallidentifikation',\n      },\n      fieldGroup: [\n        {\n          key: 'fallKennungValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Fall-Kennung',\n            placeholder: 'Bitte Fall-Kennung angeben',\n            required: true,\n          }\n        },\n      ]\n    },\n    {\n      key: 'composer',\n      wrappers: ['panel'],\n      templateOptions: {\n        required: true,\n        label: 'Dokumentar',\n      },\n      fieldGroup: [\n        {\n          key: 'externalRef',\n          type: 'input',\n          hide: true,\n          templateOptions: {\n            required: false,\n          }\n        },\n        {\n          key: 'name',\n          type: 'input',\n          templateOptions: {\n            label: 'Name',\n            required: true,\n          }\n        },\n        {\n          key: 'identifiers',\n          type: 'input',\n          hide: true,\n          templateOptions: {\n            required: false,\n          }\n        },\n      ]\n    },\n    {\n      key: 'settingDefiningcode',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        required: true,\n      }\n    },\n    {\n      key: 'location',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        required: false,\n      }\n    },\n    {\n      key: 'categoryDefiningcode',\n      type: 'input',\n      hide: true,\n      templateOptions: {\n        required: true,\n      }\n    },\n    {\n      key: 'problemDiagnose',\n      wrappers: ['panel'],\n      templateOptions: {\n        label: 'Problem/Diagnose',\n      },\n      fieldGroup: [\n        {\n          key: 'subject',\n          wrappers: ['panel'],\n          hide: true,\n          templateOptions: {\n            required: true,\n          },\n          fieldGroup: [\n            {\n              key: 'externalRef',\n              type: 'input',\n              hide: true,\n              templateOptions: {\n                required: false,\n              }\n            },\n            {\n              key: 'name',\n              type: 'input',\n              templateOptions: {\n                label: 'Name',\n                required: true,\n              }\n            },\n            {\n              key: 'identifiers',\n              type: 'input',\n              hide: true,\n              templateOptions: {\n                required: false,\n              }\n            },\n          ]\n        },\n        {\n          key: 'nameDesProblemsDerDiagnoseValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Name des Problems/ der Diagnose',\n            placeholder: 'Bitte Name des Problems/ der Diagnose angeben',\n            required: true,\n          }\n        },\n        {\n          key: 'freitextbeschreibungValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Freitextbeschreibung',\n            placeholder: 'Bitte Freitextbeschreibung angeben',\n          }\n        },\n        {\n          key: 'lokalisationValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Lokalisation',\n            placeholder: 'Bitte Lokalisation angeben',\n          }\n        },\n        {\n          key: 'anatomischeLokalisation',\n          type: 'repeat',\n          templateOptions: {\n            addText: 'Weitere anatomische Lokalisationen hinzufügen',\n          },\n            fieldArray: {\n              fieldGroup: [\n                {\n                  key: 'nameDerKorperstelleValue',\n                  type: 'input',\n                  templateOptions: {\n                    label: 'Name der Körperstelle',\n                    placeholder: 'Bitte Name der Körperstelle angeben',\n                    required: true,\n                  }\n                },\n                {\n                  key: 'lateralitatDefiningcode',\n                  type: 'radio',\n                  templateOptions: {\n                    label: 'Lateralität',\n                    options: [\n                      { value: 'LINKS', label: 'Links'  },\n                      { value: 'RECHTS',label: 'Rechts'  },\n                      ],\n                    },\n                },\n            ],\n          },\n        },\n        {\n          key: 'datumDesAuftretensDerErstdiagnoseValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Datum des Auftretens/der Erstdiagnose',\n            placeholder: 'Bitte Datum des Auftretens/der Erstdiagnose angeben',\n            type: 'date',\n          },\n          hooks: {\n            onInit: (field) => {\n              return field.formControl.valueChanges.pipe(\n                tap(value => {\n                  this.model.problemDiagnose['datumDesAuftretensDerErstdiagnoseValue'] = value + 'T00:00:00.000Z'\n                }),\n              );\n            },\n          },\n        },\n        {\n          key: 'feststellungsdatumValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Feststellungsdatum',\n            placeholder: 'Bitte Feststellungsdatum angeben',\n            type: 'date',\n          },\n          hooks: {\n            onInit: (field) => {\n              return field.formControl.valueChanges.pipe(\n                tap(value => {\n                  this.model.problemDiagnose['feststellungsdatumValue'] = value + 'T00:00:00.000Z'\n                }),\n              );\n            },\n          },\n        },\n        {\n          key: 'schweregrad',\n          wrappers: ['panel'],\n          templateOptions: {\n            label: 'Schweregrad'\n          },\n          fieldGroup: [\n            {\n              key: 'schweregradDefiningcode',\n              type: 'radio',\n              templateOptions: {\n                options: [\n                  { value: 'LEICHT', label: 'Leicht'  },\n                  { value: 'MA_IG', label: 'Mäßig'  },\n                  { value: 'SCHWER', label: 'Schwer'  },\n                  ],\n                },\n              },\n          ]\n        },\n          {\n            key: 'diagnosedetails',\n            wrappers: ['panel'],\n            templateOptions: {\n              label: 'Diagnosedetails',\n            },\n              fieldGroup: [\n                {\n                  key: 'begrundungVonAusnahmenValue',\n                  type: 'input',\n                  templateOptions: {\n                    label: 'Begründung von Ausnahmen',\n                    placeholder: 'Bitte Begründung von Ausnahmen angeben',\n                  }\n                },\n                {\n                  key: 'diagnosetypValue',\n                  type: 'select',\n                  templateOptions: {\n                    label: 'Diagnosetyp',\n                    placeholder: 'Bitte Diagnosetyp angeben',\n                    options: [\n                      { value: 'AUFNAHMEDIAGNOSE', label: 'Aufnahmediagnose'  },\n                      { value: 'OPERATIONSDIAGNOSE', label: 'Operationsdiagnose'  },\n                      { value: 'ENTLASSDIAGNOSE', label: 'Entlassdiagnose'  },\n                      { value: 'TODESURSACHE', label: 'Todesursache'  },\n                      { value: 'VERSORGUNGSFALLHAUPTDIAGNOSE', label: 'Versorgungsfallhauptdiagnose'  },\n                      { value: 'ABTEILUNGSFALLHAUPTDIAGNOSE', label: 'Abteilungsfallhauptdiagnose'  },\n                      { value: 'SONSTIGE', label: 'Sonstige'  },\n                      { value: 'VERSORGUNGSFALLNEBENDIAGNOSE', label: 'Versorgungsfallnebendiagnose'  },\n                      { value: 'ABTEILUNGSFALLNEBENIAGNOSE', label: 'Abteilungsfallnebendiagnose'  },\n                    ],\n                  },\n                },\n                {\n                  key: 'vorhandenBeiAufnahmeValue',\n                  type: 'checkbox',\n                  templateOptions: {\n                    label: 'Vorhanden bei Aufnahme',\n                  },\n                },\n                {\n                  key: 'vorhandenBeiEntlassungValue',\n                  type: 'checkbox',\n                  templateOptions: {\n                    label: 'Vorhanden bei Entlassung',\n                  },\n                },\n              ]\n            },\n        {\n          key: 'atiopathogenese',\n          wrappers: ['panel'],\n          templateOptions: {\n            label: 'Ätiopathogenese',\n          },\n          fieldGroup: [\n            {\n            key: 'atiologieDerKrankheit',\n            type: 'repeat',\n            templateOptions: {\n              addText: 'Weitere Äthiologien der Krankheit hinzufügen',\n            },\n            fieldArray: {\n              fieldGroup: [\n                {\n                  key: 'value',\n                  wrappers: ['panel'],\n                  templateOptions: {\n                    label: 'Ätiologie der Krankheit',\n                  },\n                  fieldGroup: [\n                    {\n                      key: 'definingcode',\n                      type: 'select',\n                      templateOptions: {\n                        label: 'Ätiologie der Krankheit',\n                        placeholder: 'Bitte Ätiologie der Krankheit angeben',\n                        options: [\n                          { value: 'ARBEITSRISIKOFAKTOREN', label: 'Arbeitsrisikofaktoren'  },\n                          { value: 'BIOLOGISCH', label: 'Biologisch'  },\n                          { value: 'CHEMISCHE_VERLETZUNG', label: 'Chemische Verletzung'  },\n                          { value: 'ERNAHRUNGSRELEVANTE_FAKTOREN', label: 'Ernährungsrelevante Faktoren'  },\n                          { value: 'GENETISCHE_HERKUNFT', label: 'Genetische Herkunft'  },\n                          { value: 'IMMUNOLOGISCHE_HERKUNFT', label: 'Immunologische Herkunft'  },\n                          { value: 'INFEKTION', label: 'Infektion'  },\n                          { value: 'KORPERLICHE_VERLETZUNG', label: 'Körperliche Verletzung'  },\n                          { value: 'LEBENSWANDEL_BEZOGENE_FAKTOREN', label: 'Lebenswandel-bezogene Faktoren'  },\n                          { value: 'METABOLISCH_ENDOKRINER_HERKUNFT', label: 'Metabolisch-endokriner Herkunft'  },\n                          { value: 'NEUROPSYCHIATRISCHE_HERKUNFT', label: 'Neuropsychiatrische Herkunft'  },\n                          { value: 'UMWELTEXPOSITION', label: 'Umweltexposition'  },\n                        ],\n                      },\n                    }\n                  ]\n                },\n            ],\n          },\n        },\n        {\n        key: 'beschreibungDesEntstehens',\n        type: 'repeat',\n        templateOptions: {\n          addText: 'Weitere Beschreibungen des Entstehens hinzufügen',\n        },\n        fieldArray: {\n          fieldGroup: [\n              {\n                key: 'value',\n                type: 'input',\n                templateOptions: {\n                  label: 'Beschreibung des Entstehens',\n                  placeholder: 'Bitte Beschreibung des Entstehens angeben',\n                  }\n                },\n              ],\n            },\n          },\n        ],\n        },\n        {\n          key: 'datumZeitpunktDerGenesungValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Datum/Zeitpunkt der Genesung',\n            placeholder: 'Bitte Datum der Genesung angeben',\n            type: 'date',\n          },\n          hooks: {\n            onInit: (field) => {\n              return field.formControl.valueChanges.pipe(\n                tap(value => {\n                  this.model.problemDiagnose['datumZeitpunktDerGenesungValue'] = value + 'T00:00:00.000Z'\n                }),\n              );\n            },\n          },\n        },\n        {\n          key: 'diagnostischeSicherheit',\n          wrappers: ['panel'],\n          templateOptions: {\n            label: 'Diagnostische Sicherheit',\n          },\n          fieldGroup: [\n            {\n              key: 'diagnostischeSicherheitDefiningcode',\n              type: 'radio',\n              templateOptions: {\n                options: [\n                  { value: 'VERMUTET', label: 'Vermutet'  },\n                  { value: 'WAHRSCHEINLICH', label: 'Wahrscheinlich'  },\n                  { value: 'BESTATIGT', label: 'Bestätigt'  },\n                ],\n              },\n            },\n          ]\n        },\n        {\n          key: 'diagnoseerlauterungValue',\n          type: 'input',\n          templateOptions: {\n            label: 'Diagnoseerläuterung',\n            placeholder: 'Bitte Diagnoseerläuterung angeben',\n          }\n        },\n        {\n          key: 'letztesDokumentationsdatumValue',\n          type: 'input',\n          hide: true,\n          templateOptions: {\n            type: 'date',\n          }\n        },\n        {\n          key: 'language',\n          type: 'input',\n          hide: true,\n        },\n      ]\n    },\n  ];\n  onSubmit(model: any) {\n    this.ehrService.uploadDiagnosis(this.ehrId, this.model).subscribe(\n      response => {\n        console.log(response)\n        this.getDiagnosis(response.body.uuid);\n      }\n    )\n  }\n\n  getDiagnosis(uid: string) {\n    this.ehrService.getDiagnosis(this.ehrId, uid).subscribe(\n      response => {\n        this.diagnosis = response.body;\n        console.log(response)\n      }\n    )\n  }\n\n}\n","<div class=\"d-flex flex-row align-items-start justify-content-between m-3\">\n  <div class=\"card mr-2 bg-light\">\n    <div class=\"card-body\">\n      <h3 class=\"card-title\">\n        Formular Diagnose\n      </h3>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(model)\">\n        <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\n        <button class=\"btn btn-primary\" type=\"submit\" style=\"margin-top:30px\">Submit</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"card mr-2 bg-light\">\n    <div class=\"card-body\">\n      <h3 class=\"card-title\">\n        Uploaded JSON (POST)\n      </h3>\n      <pre>{{model | json}}</pre>\n    </div>\n  </div>\n  <div class=\"card bg-light\">\n    <div class=\"card-body\">\n      <h3 class=\"card-title\">\n        Fetched JSON (GET)\n      </h3>\n      <pre *ngIf=\"diagnosis; else noDiagnosis\">{{diagnosis | json}}</pre>\n    </div>\n  </div>\n</div>\n\n<ng-template #noDiagnosis>\n  <div>\n    Once a composition has been uploaded successfully, it will be displayed here.\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}