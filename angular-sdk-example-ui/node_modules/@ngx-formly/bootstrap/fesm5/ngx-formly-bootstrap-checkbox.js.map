{"version":3,"file":"ngx-formly-bootstrap-checkbox.js","sources":["ng://@ngx-formly/bootstrap/checkbox/checkbox.type.ts","ng://@ngx-formly/bootstrap/checkbox/checkbox.module.ts","ng://@ngx-formly/bootstrap/checkbox/ngx-formly-bootstrap-checkbox.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-checkbox',\n  template: `\n    <div\n      [ngClass]=\"{\n        'form-check': to.formCheck.indexOf('custom') === -1,\n        'form-check-inline': to.formCheck === 'inline',\n        'custom-control': to.formCheck.indexOf('custom') === 0,\n        'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',\n        'custom-control-inline': to.formCheck === 'custom-inline',\n        'custom-switch': to.formCheck === 'custom-switch'\n      }\"\n    >\n      <input\n        type=\"checkbox\"\n        [class.is-invalid]=\"showError\"\n        [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n        [class.position-static]=\"to.formCheck === 'nolabel'\"\n        [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n        [indeterminate]=\"to.indeterminate && formControl.value == null\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n      />\n      <label\n        *ngIf=\"to.formCheck !== 'nolabel'\"\n        [for]=\"id\"\n        [class.form-check-label]=\"to.formCheck.indexOf('custom') === -1\"\n        [class.custom-control-label]=\"to.formCheck.indexOf('custom') === 0\"\n      >\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </label>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldCheckbox extends FieldType {\n  defaultOptions = {\n    templateOptions: {\n      indeterminate: true,\n      hideLabel: true,\n      formCheck: 'custom', // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline' | 'nolabel'\n    },\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\n\nimport { FormlyFieldCheckbox } from './checkbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormlyBootstrapFormFieldModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'checkbox',\n          component: FormlyFieldCheckbox,\n          wrappers: ['form-field'],\n        },\n        {\n          name: 'boolean',\n          extends: 'checkbox',\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyBootstrapCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;IAuCyC,uCAAS;IAAlD;QAAA,qEAQC;QAPC,oBAAc,GAAG;YACf,eAAe,EAAE;gBACf,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,QAAQ;aACpB;SACF,CAAC;;KACH;IARY,mBAAmB;QApC/B,SAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,QAAQ,EAAE,mxCA+BT;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;OACW,mBAAmB,CAQ/B;IAAD,0BAAC;CAAA,CARwC,SAAS;;;ICTlD;KAA6C;IAAhC,6BAA6B;QArBzC,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;YACnC,OAAO,EAAE;gBACP,YAAY;gBACZ,mBAAmB;gBACnB,8BAA8B;gBAC9B,YAAY,CAAC,QAAQ,CAAC;oBACpB,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,UAAU;4BAChB,SAAS,EAAE,mBAAmB;4BAC9B,QAAQ,EAAE,CAAC,YAAY,CAAC;yBACzB;wBACD;4BACE,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,UAAU;yBACpB;qBACF;iBACF,CAAC;aACH;SACF,CAAC;OACW,6BAA6B,CAAG;IAAD,oCAAC;CAA7C;;AC9BA;;;;;;"}