import { __decorate } from 'tslib';
import { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FieldType, FormlyModule } from '@ngx-formly/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';

let FormlyFieldCheckbox = class FormlyFieldCheckbox extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                indeterminate: true,
                hideLabel: true,
                formCheck: 'custom',
            },
        };
    }
};
FormlyFieldCheckbox = __decorate([
    Component({
        selector: 'formly-field-checkbox',
        template: `
    <div
      [ngClass]="{
        'form-check': to.formCheck.indexOf('custom') === -1,
        'form-check-inline': to.formCheck === 'inline',
        'custom-control': to.formCheck.indexOf('custom') === 0,
        'custom-checkbox': to.formCheck === 'custom' || to.formCheck === 'custom-inline',
        'custom-control-inline': to.formCheck === 'custom-inline',
        'custom-switch': to.formCheck === 'custom-switch'
      }"
    >
      <input
        type="checkbox"
        [class.is-invalid]="showError"
        [class.form-check-input]="to.formCheck.indexOf('custom') === -1"
        [class.position-static]="to.formCheck === 'nolabel'"
        [class.custom-control-input]="to.formCheck.indexOf('custom') === 0"
        [indeterminate]="to.indeterminate && formControl.value == null"
        [formControl]="formControl"
        [formlyAttributes]="field"
      />
      <label
        *ngIf="to.formCheck !== 'nolabel'"
        [for]="id"
        [class.form-check-label]="to.formCheck.indexOf('custom') === -1"
        [class.custom-control-label]="to.formCheck.indexOf('custom') === 0"
      >
        {{ to.label }}
        <span *ngIf="to.required && to.hideRequiredMarker !== true">*</span>
      </label>
    </div>
  `,
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], FormlyFieldCheckbox);

let FormlyBootstrapCheckboxModule = class FormlyBootstrapCheckboxModule {
};
FormlyBootstrapCheckboxModule = __decorate([
    NgModule({
        declarations: [FormlyFieldCheckbox],
        imports: [
            CommonModule,
            ReactiveFormsModule,
            FormlyBootstrapFormFieldModule,
            FormlyModule.forChild({
                types: [
                    {
                        name: 'checkbox',
                        component: FormlyFieldCheckbox,
                        wrappers: ['form-field'],
                    },
                    {
                        name: 'boolean',
                        extends: 'checkbox',
                    },
                ],
            }),
        ],
    })
], FormlyBootstrapCheckboxModule);

/**
 * Generated bundle index. Do not edit.
 */

export { FormlyBootstrapCheckboxModule, FormlyFieldCheckbox };
//# sourceMappingURL=ngx-formly-bootstrap-checkbox.js.map
